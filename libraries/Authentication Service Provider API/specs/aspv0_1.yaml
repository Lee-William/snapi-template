#Default Parameters needed for a YAML file
openapi: 3.0.0
servers:
  - url: 'https://ndi.sg.io:3033/api/v1' #Real API link
    description: NDI API
    variables: {}
  - url: 'https://sandbox.ndi.io:3031/api/v1' #sandbox API link
    description: NDI API Sandbox
info:
  description: >-
    This is the API store where you can discover everything about integrating
    with the National Digital Identity (NDI) platform.  You can find out more
    about NDI at [http://ndi.sg.io/home](http://ndi.sg.io/home).  To try out the
    API, first go to the Authorization section to learn how to obtain an access
    token to access the API.
    
    <ul>
        <li> Access technical reference for mobile developers <a href="https://isomerpages.github.io/isomerpages-ndi/files/techref/appdev/appdev">here</a></li>
        <li> Access technical reference for web developers <a href="https://isomerpages.github.io/isomerpages-ndi/files/techref/appdev/webdev">here</a></li>
        <li> Access technical reference for Resource Operators <a href="https://isomerpages.github.io/isomerpages-ndi/files/techref/aspproviders/aspprov">here</a></li>
    </ul>
    
  version: 1.0.0
  title: National Digital Identity (NDI) - ASP-Oauth 2
  termsOfService:
  contact:
    email: support@ndi.gov.sg

#externalDocs:
#  description: Access technical reference for Developers.
#  url: 'https://isomerpages.github.io/isomerpages-ndi/files/techref/appdev/webdev'
#  x-description: Access technical reference for App Developers.
#  x-url: 'https://isomerpages.github.io/isomerpages-ndi/files/techref/appdev/webdev'

#These are the tags for the side bar (the one on the left)
tags:
  - name: User Authentication & System Related
    description: >-
      Operations for User Authentication & querying system information. The services for this category includes: </br>
      </br>
      <b>1. Querying the service to obtain system metrics</b> <br/>
      <b>2. Inititate uther authentication or authorization (GET)</b> <br/>
      <b>3. Inititate uther authentication or authorization (POST)</b> <br/>


  - name: Certificates, Token & Configurations
    description: >-
      Operations for Digital Certificates. The services for this category includes: </br> </br>
      <b>1. Exchange for the security tokens (ID token and access token) with the authorization code</b> </br>
      <b>2. Get the JWK Set containing the ASP signing keys<b>


#End of side tags

#=============================== ASP Oauth2 start =========================== 
paths:
  '/asp/sys/metrics': 
    get:
      tags:
        -  User Authentication & System Related
      summary: Query the service to obtain system metrics 
      description: >- 
          Query the service to obtain system metrics. The response consists of the following fields
          <table>
            <tr><th>Field</th> <th>Description</th></tr>
            <tr><td>uptime</td><td>the up time of the service since the previous call </td>
            <tr><td>conn<td>the number of concurrent connections</td>
            <tr><td>cpu</td><td>CPU usage in percentage</td>
            <tr><td>rss</td><td>memory (RSS) utilization</td>
            <tr><td>heap</td><td>memory allocated to heap</td>
            <tr><td>heap_used</td><td>heap utilization</td>
            <tr><td>mem_ext</td><td>external memory</td>
          </table>
      responses:
        '200':
          description: "Sucess"
          content:
            application/json:
              schema:
                type: object
                properties:
                  uptime: 
                    description: The up time of the service since the previous call
                    type: number
                  cpu: 
                    description: The CPU usage in percentage
                    type: number
                  rss:
                    description: The amount of memory utilization
                    type: string
                  heap:
                    description: The amount of memory allocated to heap 
                    type: string
                  heat_used:
                    description: The amount of heap utilization 
                    type: string
                  mem_ext:
                    description: The external memory
                    type: string
                example:
                  uptime: 4163
                  cpu: 0
                  rss: 12.53m
                  heap: 31.59m
                  heap_used: 24.71m
                  mem_ext: 0.21m



  '/asp/auth':
    get:
      tags:
        - User Authentication & System Related
      summary: Initiate user authentication or authorization (GET)
      description: >-
        OAuth2.0 authorization endpoint. The client call this endpoint to start
        the OAuth2.0 flow. The client redirects the user agent to this endpoint,
        which typically returns the NDI Login page for the user to enter his
        NDI Id for authentication. The ASP then routes an authentication challenge
        to the user's form factor (e.g. the NDI soft token on his mobile device)
        via the appropriate protocols. In the case of NDI soft token, the
        authentication challenge is sent to the user via push notification to his
        mobile device, where the user enters his PIN to unlock the soft token to
        sign on the authentication challenge. The signature response is returned to
        the ASP which verifies the signature with the user's certificate.  If all
        is well, the ASP generates an authorization code and sends it to the client
        via the client's redirect uri.  The client may then invoke the token
        endpoint to exchange for the security tokens (i.e. id token and access
        token) using the authorization code, in accordance to the authorization
        code grant flow.
      operationId: initiateAuth
      parameters:
        - name: client_id
          in: query
          description: >-
            The client id assigned to the client.
          required: true
          schema:
            type: string
        - name: nonce
          in: query
          description: >-
            A random unqiue reference generated by the client, which will be
            included in the ID token returned by the ASP on successful user
            authentication. The client may use this to tie the ID token to a
            particular authenticated session.
          required: true
          schema:
            type: string
        - name: scope
          in: query
          description: >-
            The scope of access requested.
          schema:
            type: string
        - name: response_type
          in: query
          description: >-
            The response type, may be code or idtoken. Default to code if not
            specified.
          required: false
          schema:
            type: string
        - name: state
          in: query
          description: >-
            The random string generated by the client to counter CSRF, if
            specified, the ASP will include it as part of the redirect url
            when returning the authorization code to the client's redirect
            uri.  The client is to match the value of the state returned with
            its copy to ensure the redirect is from the ASP.
          required: false
          schema:
            type: string
        - name: login_hint
          in: query
          description: >-
            The client may capture the user's NDI Id using its UI instead of the
            NDI Login page. To suppress the NDI Login page, it may pass the NDI
            Id to the ASP by setting login_hint to the NDI Id and setting the
            prompt parameter to none.
          required: false
          schema:
            type: string
        - name: prompt
          in: query
          description: >-
            Set this to none to suppress the NDI Login page, if the login_hint
            parameter is set to the NDI Id, otherwise the ASP will ignore this
            parameter and show the NDI Login page.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success, the NDI Login page
          content:
            text/html:
              schema: 
                  type: string
                  format: html
        '302':
          description: >
            If the NDI Id is provided, the ASP returns the authorization code
            via redirect to the client's redirect uri.
          content:
            text/html:
              schema: 
                  type: string
                  format: html
        '500':
          description: Error
          content:
            application/json:
              schema: 
                  type: object
                  properties: 
                      err_msg :
                          description: error message
                          type: string
      security: []
    post:  #There is a GET and POST for authentication, therefore there is 2 diff separate one
      tags:
        - User Authentication & System Related
      summary: Initiate user authentication or authorization (POST)
      description: >-
        OAuth2.0 authorization endpoint. The client call this endpoint to start
          the OAuth2.0 flow. The client redirects the user agent to this endpoint,
          which typically returns the NDI Login page for the user to enter his
          NDI Id for authentication. The ASP then routes an authentication challenge
          to the user's form factor (e.g. the NDI soft token on his mobile device)
          via the appropriate protocols. In the case of NDI soft token, the
          authentication challenge is sent to the user via push notification to his
          mobile device, where the user enters his PIN to unlock the soft token to
          sign on the authentication challenge. The signature response is returned to
          the ASP which verifies the signature with the user's certificate.  If all
          is well, the ASP generates an authorization code and sends it to the client
          via the client's redirect uri.  The client may then invoke the token
          endpoint to exchange for the security tokens (i.e. id token and access
          token) using the authorization code, in accordance to the authorization
          code grant flow.
      operationId: initiateAuth
      security: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                client_id:
                  description: The client id assigned to the client <b>(Mandatory)</b>
                  type: string
                  
                nonce:
                  description: >-
                    A random unqiue reference generated by the client, which will be
                    included in the ID token returned by the ASP on successful user
                    authentication. The client may use this to tie the ID token to a
                    particular authenticated session. <b>(Mandatory)</b>
                  type: string
                
                  scope:
                    description: The scope of access required
                    type: string

                  response_type:
                    description: The response type, may be code or idtoken. Default to code if not specified.
                    type: string
                  
                  state:
                    description: >-
                      The random string generated by the client to counter CSRF, if
                      specified, the ASP will include it as part of the redirect url
                      when returning the authorization code to the client's redirect
                      uri.  The client is to match the value of the state returned with
                      its copy to ensure the redirect is from the ASP.
                    type: string
                  
                    login_hint:
                      description: >-
                        The client may capture the user's NDI Id using its UI instead of the
                        NDI Login page. To suppress the NDI Login page, it may pass the NDI
                        Id to the ASP by setting login_hint to the NDI Id and setting the
                        prompt parameter to none.
                      type: string

                    prompt:
                      description: >-
                        Set this to none to suppress the NDI Login page, if the login_hint
                        parameter is set to the NDI Id, otherwise the ASP will ignore this
                        parameter and show the NDI Login page.    
                      type: string       
      responses:
        '200':
          description: Success, the NDI Login page
          content:
            text/html:
              schema: 
                  type: string
                  format: html
        '302':
          description: >
            If the NDI Id is provided, the ASP returns the authorization code
            via redirect to the client's redirect uri.
          content:
            text/html:
              schema: 
                  type: string
                  format: html
        '500':
          description: Error
          content:
            application/json:
              schema: 
                  type: object
                  properties: 
                      err_msg :
                          description: error message
                          type: string

  '/asp/responses':
    post:
      tags:
        - User Authentication & System Related
      operationId: responses
      summary: Callback endpoint called by form factor
      description: >-
        This is the callback endpoint called by the form factor (or form factor
        authenticator service) to return the signed response to the originating
        ASP of the authentication challenge. <br/><br/>
        The request body consists of the following fields:
        <table>
        <tr>
          <th>Field</th>
          <th>Description</th>
        </tr>

        <tr>
          <td>ff_auth_ref</td>
          <td>The form factor authentication reference</td>
        </tr>
        <tr>
          <td>usr_action</td>
          <td>This may be 'accept', 'consent' or 'reject'</td>
        </tr>
        
        <tr>
          <td>response</td>
          <td>The signed response (an encoded JWS), this is not present if
        usr_action is 'reject'</td>
        </tr>
 
        </table>

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                ff_auth_ref: 
                  type: string
                  description: The form factor authentication reference
                usr_action:
                  type: string
                  description: This may be 'accept', 'consent' or 'reject'
                response:
                  type: string
                  description: The signed response (an encoded JWS), this is not present if
                    usr_action is 'reject'
      responses:
        '200':
          description: "Sucess"
        '500':
          description: "Error"

  
  '/asp/auth/login':
    post:
      tags:
        - User Authentication & System Related
      summary: Endpoint called by the NDO Login page
      description: >-
        This endpoint is called by the NDI Login page when the user click the
        OK button, passing over the user NDI id.  This will initiate user
        authentication by sending an authentication challenge (via the form
        factor authenticator service) to the user's form factor.
      parameters:
        - name: reg_code
          in: query
          required: true
          schema:
            type: string
          
        - name: uname
          in: query
          required: true
          schema:
            type: string
        
        - name: client_id
          in: query
          required: true
          schema:
            type: string
        
        - name: otp
          in: query
          required: true
          schema:
            type: string

  '/asp/token':
    post:
      tags:
        - Certificates, Token & Configurations
      summary: Exchange for the security tokens (ID token and access token) with the
        authorization code obtained from the authorization endpoint.
      description: |
        OAuth2.0 token endpoint. Your client app calls this endpoint to exchange
        for the security tokens (ID token and access token) with the authorization
        code obtained from the authorization endpoint after a successful user
        authetication/authorization.  Set the request body as follows

        <table style="width:100%">
          <tr>
            <th>Field</th>
            <th>Description</th> 
          </tr>
          <tr>
            <td>code</td>
            <td>The authorization code obtained from the authorization
            endpoint.</td>
          </tr>
          <tr>
            <td>client_id</td>
            <td>The client id assigned to your client app during client
            registration.</td>
          </tr>
          <tr>
            <td>client_secret</td>
            <td>The client secret that you obtained from the API Portal
            during client registration.</td>
          </tr>
          <tr>
            <td>redirect_uri</td>
            <td>Set to authorization_code, as defined in OAuth 2.0 specs.</td>
          </tr>
        </table>

      requestBody:
        content:
          application/json:
            schema:      # Request body contents
              type: object
              properties:
                grant_type:
                  type: string
                code:
                  type: string
                redirect_uri:
                  type: string
                client_id:
                  type: string
                client_secret:
                  type: string
              example:   # Sample object
                grant_type: authorization_code
                code: 10aet620pz49
                redirect_uri: https://www.ganymede.com/code
                client_id: WA.102396842
                client_secret: c213nts3c53t
      responses:
         '200':
          description: |
            Successfully returned the security tokens.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id_token:
                    type: string
                  access_token:
                    type: string
                  token_type:
                    type: string
                  expires_in:
                    type: integer
                example:   # Sample object
                  id_token: eyJ0eXAiOiJKV1QiLCJraWQiOiIxLjMuNi4xLjQuMS43MjcyMi4zLjEiLCJhbGciOiJFUzI1NiJ9.eyJpc3MiOiJpY2ViZWFyMS5hc3AiLCJzdWIiOiI3NGVjNjYyMC0yODI5LTExZTgtOThmYi00M2Q5Nzc1ODAxMmUiLCJhdWQiOiJkZW1vd2FwcCIsImlhdCI6MTUyMTU5MTczOTM2OCwiZXhwIjoxNTIxNTkxNzM5OTY4LCJub25jZSI6ImU2YjA5NTYwLTJjOWQtMTFlOC1hODM3LTQ1YzEyODNlYzBiNSJ9.1PMiPJQwP8ziOMJS5X4-1xPMOnuIpOV3y-NjkFJTboa23fPwxzwNpe2FZigLglhDcglnwNzbLB1_o_1UPZjYVw
                  access_token: eaddc450-2c9d-11e8-a837-45c1283ec0b5
                  expires_in: 600
                  token_type: Bearer
                  
  '/asp/certs':
    get:
      tags:
        - Certificates, Token & Configurations
      summary: Get the JWK Set containing the ASP signing keys.
      description: >-
        Get the JSON Web Key (JWK) Set containing the signing keys of this ASP.
        The signing keys (i.e. public keys) are used by the form factor local agent
        (or the form factor authenticator) to verify the signed challenges sent by
        the ASP. The signing key to use for verification is indicated by the kid
        value in the header of the signed challenge JWS. The JWK set is to be
        downloaded periodically as the ASP refreshes its signing keys regularly.
      operationId: getJwks
      responses:
        '200':
          description: Success, the JWK Set
          content:
            application/json:
              schema: 
                type: object
                properties:
                  keys:
                    type: object
                    properties:
                      kty:
                        type: integer
                      crv:
                        type: string
                    example:
                      - kty: EC
                        crv: P-256
                        x: cobxoYr4GfP1PDZ5GT47Z4L3Z4xhbwetX05WaBBgEo0=
                        y: DajZqnjn1YNL8nNCBVdBbdRq71Zv63/DegY9GXqvnZ0=
                        kid: 1.3.6.1.4.1.72722.3.1
                        use: sig
                      - kty: EC
                        crv: P-256
                        x: cxrYBCTNI89USDjo11ySs3526iDZ8AiTo7Tu6KPAqv7D4",
                        y: as63vwsdgocXsafgag79vdsaVp7x8PxltjkkbbM4IFyM",
                        use: sig
                        kid: 1.3.6.1.4.1.72722.3.9
        '500':
          description: Error
          content:
            application/json:
              schema: 
                  type: object
                  properties: 
                      err_msg :
                          description: error message
                          type: string
      security: []
  
  '/asp/.well-known/openid-configuration':
    get:
      tags:
        - Certificates, Token & Configurations
      summary: Get OpenID Connect Discovery document of this ASP
      description: >-
        Get the OpenID Connect discovery document of this ASP. The discovery
        document is downloaded by relying parties to find out the onfiguration of
        and capabilities supported by the ASP e.g. authorization url, token url,
        etc.  Relying parties should download the discovery document periodically
        as ASP configuration may change from time to time.
        Response: the response body contains the discovery document.
      operationId: getOpenidConfig
      responses:
        '200':
          description: "Sucess"
        '500':
          description: "Error"



security: []
