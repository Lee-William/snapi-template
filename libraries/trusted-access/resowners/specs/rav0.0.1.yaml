#Default Parameters needed for a YAML file
openapi: 3.0.0
servers:
  - url: 'https://sandbox.api.ndi.gov.sg/ra/api/v1/ra' #sandbox API link
    description: NDI API Sandbox
info:
  version: 0.3.2
  title: National Digital Identity (NDI) - ASP API
  termsOfService: 'https://www.ndi-api.gov.sg/termsofuse/'
  contact:
    email: ndi_support@ndi.gov.sg
  x-logo:
    url: '/assets/lib/trusted-access/img/ndi-logo-sm.png'
  description: |
    This is the API store where you can discover everything about integrating
    with the National Digital Identity (NDI) platform.

    # Release Notes
      * 0.3.2 (Release Date)
        * Initial release of API

    # Overview

    # Environment

      ## Available Environments
      
      Sandbox/Dev: https://sandbox.api.ndi.gov.sg/<TBC>


#The above sections starting with # indicates a section by itself. To add more content simply Use # to represent a new section
#These are all non APIs related documentations, API definitions should all be below

#These are the tags for the side bar (the one on the left)
tags:
  - name: Certificates
    description: Operations that are digital certificates related
  - name: Identity Assurance
    description: Operations that are identity assurance related 

paths:
  '/ra/ssp':
    get:
      tags: 
       - Certificates
      summary: SSP for RA (Web page)
      description: >-
        The SSP for RA <br/>
        User may access the page to do actions related to Cert Life Cycle
      operationId: ssp
      responses:
        '200':
          description: "Display the SSP Web page"
        '400':
          description: "Error"
  
  '/ra/certs':
    post:
      tags:
        - Certificates
      summary: Generate a certificate
      description: >-
        Generate a certificate by sending the CSR generated for the form factor
        keypair to the CA.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                csr:
                  description: The CSR, in PEM format
                  type: string
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  cert:
                    description: The certificate issued by the CA
                    type: string
        
        '400':
          description: "Error "
  '/ra/ssp/suspend':
    post:
      tags:
        - Certificates
      summary: Cert Suspension call from RA SSP
      description: Call for suspension for a particular digial certificate from RA SSP. The serial_no is passed in the requestBody of the operation
      operationId: suspendCert
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                serial_no:
                  type: string
                  description: The serial_no of the digital certificate
                
              example:
                  serial_no: 1526032002083 (0x1634e986c23)
      responses:
        '200':
          description: "Success. Certificate successfully suspended"
        '500':
          description: "Error"
  
  '/ra/ssp/reinstate':
    post:
      tags:
        - Certificates
      summary: Reinstate the Certificate from RA SSP
      description: Reinstate the certificate by calling the service from CA
      operationId: reinstateCert
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                serial_no:
                  type: string
                  description: The serial_no of the digital certificate
                
              example:
                  serial_no: 1526032002083 (0x1634e986c23)
      responses:
        '200':
          description: "Success. Certificate successfully reinstate"
        '500':
          description: "Error"

  '/ra/ssp/revoke':
    post:
      tags:
        - Certificates
      summary: Cert Revoke call from RA SSP
      description: Call for Revocation for a particular digial certificate from RA SSP. The serial_no is passed in the requestBody of the operation
      operationId: revokeCert
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                serial_no:
                  type: string
                  description: The serial_no of the digital certificate
                
              example:
                  serial_no: 1526032002083 (0x1634e986c23)
      responses:
        '200':
          description: "Success. Certificate successfully revoked"
        '500':
          description: "Error"

  '/ra/id/assurances':
    get:
      tags:
        - Identity Assurance
      summary: Get the endpoint info of the specified identity assurance service
      description: >-
        This function looks up the Extension Registry for the attributes
        of the requested identity asssurance service, using the given 
        identity assurance service name (e.g. singpass2fa). <br/>
        Inputs:<br/>

        <table>
          <tr>
            <th>Parameters</th>
            <th>Description</th>
          </tr>

          <tr>
            <td>ia_name</td>
            <td>query param, the identity assurance service name</td>
          </tr>

        </table>

      parameters: 
        - name: ia_name
          in: query
          description: The identity assurance service name
          schema:
            type: string
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  endpoint:
                    type: string
                    description: The url to call the identity assurance service which the client may call to carry out identity verification for the user
                  client_id:
                    type: string
                    description: The dynamic client id used to access the identity sasurance service, the client is to set this to the client_id during the call to the identity assurance services
                  reg_code:
                    type: string
                    description: The randomly generated registration ocde which uniquely identify this registration instance, the client is to set this to the state param during the call
        '400':
          description: "Error: Invalid ID assurance method"

  '/ra/id/assurances/verify':
    get:
      tags:
        - Identity Assurance  
      summary: Callback endpoint for identity assurance service
      description: >-
        This is the callback endpoint for the identity assurance service to return
        the authorization code/error to the RA, after it completes the user authentication.
        The client user agent is redirected to this callback endpoint with the following params:
        <br/>
        <table>
          <tr>
            <th>Parameter</th>
            <th>Description</th>
          </tr>

          <tr>
            <td>code</td>
            <td>The authorization code on success</td>
          </tr>

          <tr>
            <td>error</td>
            <td>The error code on error</td>
          </tr>

          <tr>
            <td>state</td>
            <td>The reg code</td>
          </tr>
        </table>
      parameters:
        - name: code
          in: query
          description: The authorization code on success
          schema:
            type: string
        
        - name: error
          in: query
          description: The error code on error

        - name: state
          in: query
          description: The reg code

      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema: 
                type: object
                properties:
                  usr_id:
                    type: string
                    description: The userid of the verified user
                example:
                  usr_id: demoUser
        '400':
          description: "Error. Authentication error or invalid data"
        
  '/ra/id/enrolments':
    post:
      tags:
        - Identity Assurance
      summary: Start form factor enrolment
      description: This service starts the form factor enrolment
      operationID: startFFEnrolment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reg_code: 
                  description: A valid reg code which references a successful identity assurance of the user
                  type: string  
      responses:
        '200':
          description: "Success"
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  uuid: 
                    description: The uuid of the user will be returned. This may be used by the client as one of the inputs to create the CSR for the keypair generated for the user
                    type: string
        '500':
          description: "Error. Invalid code"
  
  '/ra/id/enrolments/activations':
    put:
      tags: 
        - Identity Assurance
      summary: Complete enrolment and activate the form factor
      description: This service is used to complete the enrolment process and activate the form factor for the selected user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reg_code:
                  description: The reg code used to start the enrolment
                  type: string
                usr_id:
                  description: The user id
                  type: string
                uuid:
                  description: The user uuid
                  type: string
                cert_sn:
                  description: The cert serial number
                  type: string
                ff_id:
                  description: The form factor id, this is a form factor-specific identifier which uniquely identity the form factor
                  type: string
                ff_type:
                  description: The form factor type, e.g. soft token, demokeys;
                  type: string
                ff_host:
                  description: The identifying info of the host device where the form factor resides
                  type: string
                preferred:
                  description: Set to 'y' to make this form factor the preferred form factor of the user
                  type: string
                use_for:
                  description: Intended use of the form factor (authn, sign), 'authn' by default
                  type: string
                ff_attr:
                  description: The form factor-specific attributes, in json format. May contain attributes for registration ID, web push subscription token, etc.
                  type: object
      responses:
        '200':
          description: "Success"
        "400":
          description: "Error"







           




